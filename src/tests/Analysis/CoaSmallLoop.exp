fp:fp
sp_2: orig: sp
Top_3: orig: Top
ax_4: orig: ax
    def:  ax_4 = 0<16>
    uses: ax_12 = PHI((ax_4, l0C00_0000), (ax_15, l0C00_0004))
SZ_5: orig: SZ
C_6: orig: C
O_7: orig: O
ds:ds
    def:  def ds
    uses: cx_11 = Mem0[ds:bx:word16]
          Mem19[ds:0x300<16>:word16] = ax_15
bx:bx
    def:  def bx
    uses: cx_11 = Mem0[ds:bx:word16]
Mem0:Mem
    def:  def Mem0
    uses: cx_11 = Mem0[ds:bx:word16]
cx_11: orig: cx
    def:  cx_11 = Mem0[ds:bx:word16]
    uses: cx_13 = PHI((cx_11, l0C00_0000), (cx_17, l0C00_0004))
ax_12: orig: ax
    def:  ax_12 = PHI((ax_4, l0C00_0000), (ax_15, l0C00_0004))
    uses: ax_15 = ax_12 + cx_13 + cx_13
cx_13: orig: cx
    def:  cx_13 = PHI((cx_11, l0C00_0000), (cx_17, l0C00_0004))
    uses: ax_15 = ax_12 + cx_13 + cx_13
          cx_17 = cx_13 - 1<16>
          ax_15 = ax_12 + cx_13 + cx_13
ax_14: orig: ax
ax_15: orig: ax
    def:  ax_15 = ax_12 + cx_13 + cx_13
    uses: Mem19[ds:0x300<16>:word16] = ax_15
          ax_12 = PHI((ax_4, l0C00_0000), (ax_15, l0C00_0004))
SCZO_16: orig: SCZO
cx_17: orig: cx
    def:  cx_17 = cx_13 - 1<16>
    uses: branch cx_17 != 0<16> l0C00_0004
          cx_13 = PHI((cx_11, l0C00_0000), (cx_17, l0C00_0004))
C_20: orig: C
Mem19: orig: Mem0
    def:  Mem19[ds:0x300<16>:word16] = ax_15
O_21: orig: O
S_22: orig: S
Z_25: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bx, selector ds)
fn0C00_0000_entry:
	def ds
	def bx
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	ax_4 = 0<16>
	cx_11 = Mem0[ds:bx:word16]
	// succ:  l0C00_0004
l0C00_0004:
	cx_13 = PHI((cx_11, l0C00_0000), (cx_17, l0C00_0004))
	ax_12 = PHI((ax_4, l0C00_0000), (ax_15, l0C00_0004))
	ax_15 = ax_12 + cx_13 + cx_13
	cx_17 = cx_13 - 1<16>
	branch cx_17 != 0<16> l0C00_0004
	// succ:  l0C00_000A l0C00_0004
l0C00_000A:
	Mem19[ds:0x300<16>:word16] = ax_15
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:


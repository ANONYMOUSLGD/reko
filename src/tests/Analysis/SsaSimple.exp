fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: bp_4 = sp_2
Top_3: orig: Top
    def:  Top_3 = 0<i8>
    uses: use Top_3
bp_4: orig: bp
    def:  bp_4 = sp_2
    uses: ax_7 = Mem0[ss:bp_4 + 6<16>:word16]
          sp_15 = bp_4
          use bp_4
ss:ss
    def:  def ss
    uses: ax_7 = Mem0[ss:bp_4 + 6<16>:word16]
Mem0:Mem
    def:  def Mem0
    uses: ax_7 = Mem0[ss:bp_4 + 6<16>:word16]
ax_7: orig: ax
    def:  ax_7 = Mem0[ss:bp_4 + 6<16>:word16]
    uses: ax_8 = ax_7 | ax_7
          ax_8 = ax_7 | ax_7
ax_8: orig: ax
    def:  ax_8 = ax_7 | ax_7
    uses: SZ_9 = cond(ax_8)
          ax_16 = PHI((ax_8, l0C00_0000), (ax_13, l0C00_0009))
SZ_9: orig: SZ
    def:  SZ_9 = cond(ax_8)
    uses: Z_12 = SLICE(SZ_9, bool, 2) (alias)
          S_20 = SLICE(SZ_9, bool, 0) (alias)
C_10: orig: C
    def:  C_10 = false
    uses: use C_10
O_11: orig: O
    def:  O_11 = false
    uses: use O_11
Z_12: orig: Z
    def:  Z_12 = SLICE(SZ_9, bool, 2) (alias)
    uses: branch Test(NE,Z_12) l0C00_000C
          use Z_12
ax_13: orig: ax
    def:  ax_13 = 0xFFFF<16>
    uses: ax_16 = PHI((ax_8, l0C00_0000), (ax_13, l0C00_0009))
ax_16: orig: ax
    def:  ax_16 = PHI((ax_8, l0C00_0000), (ax_13, l0C00_0009))
    uses: use ax_16
sp_15: orig: sp
    def:  sp_15 = bp_4
    uses: use sp_15
S_20: orig: S
    def:  S_20 = SLICE(SZ_9, bool, 0) (alias)
    uses: use S_20
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ss
	def Mem0
	sp_2 = fp
	Top_3 = 0<i8>
	// succ:  l0C00_0000
l0C00_0000:
	bp_4 = sp_2
	ax_7 = Mem0[ss:bp_4 + 6<16>:word16]
	ax_8 = ax_7 | ax_7
	SZ_9 = cond(ax_8)
	Z_12 = SLICE(SZ_9, bool, 2) (alias)
	S_20 = SLICE(SZ_9, bool, 0) (alias)
	C_10 = false
	O_11 = false
	branch Test(NE,Z_12) l0C00_000C
	// succ:  l0C00_0009 l0C00_000C
l0C00_0009:
	ax_13 = 0xFFFF<16>
	// succ:  l0C00_000C
l0C00_000C:
	ax_16 = PHI((ax_8, l0C00_0000), (ax_13, l0C00_0009))
	sp_15 = bp_4
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_16
	use bp_4
	use C_10
	use O_11
	use S_20
	use sp_15
	use Top_3
	use Z_12


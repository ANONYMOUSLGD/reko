// fn0C00_0000 /////////////////////
	LiveOut:  
	BitsUsed:  ds:[0..15]
	Trashed:   SCZO ax dx Top
	Preserved: sp
// fn0C00_0000
define fn0C00_0000
fn0C00_0000_entry:
	def ds
l0C00_0000:
	call fn0C00_000B (retsize: 2;)
		uses: dx:0x1E<16>
		defs: ax:ax_5
	Mem12[ds:0x12C<16>:word16] = ax_5
	return
fn0C00_0000_exit:
// fn0C00_000B /////////////////////
	LiveOut:   ax:[0..15]
	BitsUsed:  dx:[0..15]
	Trashed:   SCZO ax dx Top
	Preserved: sp
// fn0C00_000B
define fn0C00_000B
fn0C00_000B_entry:
	def dx
l0C00_000B:
	call fn0C00_000F (retsize: 2;)
		uses: dx:dx
		defs: ax:ax_5
	return
fn0C00_000B_exit:
	use ax_5
// fn0C00_000F /////////////////////
	LiveOut:   ax:[0..15]
	BitsUsed:  dx:[0..15]
	Trashed:   SCZO ax dx Top
	Preserved: si sp
// fn0C00_000F
define fn0C00_000F
fn0C00_000F_entry:
	def dx
l0C00_000F:
	si_8 = 0<16>
l0C00_0015:
	si_16 = si_15 + dx_12
	dx_18 = dx_12 - 1<16>
l0C00_0018:
	si_15 = PHI((si_8, l0C00_000F), (si_16, l0C00_0015))
	dx_12 = PHI((dx, l0C00_000F), (dx_18, l0C00_0015))
	branch dx_12 >= 0<16> l0C00_0015
l0C00_001D:
	ax_20 = si_15
	return
fn0C00_000F_exit:
	use ax_20

// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	ax_6 = Mem0[ds:0x200<16>:word16]
	dx_7 = Mem0[ds:0x202<16>:word16]
	cx_8 = Mem0[ds:0x204<16>:word16]
	bx_9 = Mem0[ds:0x206<16>:word16]
	dx_ax_46 = SEQ(dx_7, ax_6)
	bx_cx_47 = SEQ(bx_9, cx_8)
	dx_ax_48 = dx_ax_46 + bx_cx_47
	ax_10 = SLICE(dx_ax_48, word16, 0) (alias)
	dx_13 = SLICE(dx_ax_48, word16, 16) (alias)
	Mem15[ds:0x208<16>:word16] = ax_10
	Mem16[ds:0x20A<16>:word16] = dx_13
	ax_17 = Mem16[ds:0x210<16>:word16]
	dx_18 = Mem16[ds:0x212<16>:word16]
	es_cx_19 = Mem16[ds:0x214<16>:segptr32]
	dx_ax_49 = SEQ(dx_18, ax_17)
	dx_ax_51 = dx_ax_49 - es_cx_19
	ax_23 = SLICE(dx_ax_51, word16, 0) (alias)
	dx_27 = SLICE(dx_ax_51, word16, 16) (alias)
	Mem25[ds:0x218<16>:word16] = ax_23
	Mem29[ds:0x21A<16>:word16] = dx_27
	cl_34 = Mem29[ds:0x220<16>:byte]
	cl_39 = Mem29[ds:0x221<16>:byte]
	ax_43 = (cl_34 <u 0x30<8>) * 2<16> + (cl_39 >=u 0x3A<8>)
	Mem45[ds:0x222<16>:word16] = ax_43
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

